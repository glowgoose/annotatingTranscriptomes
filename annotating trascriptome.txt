# getting scripts

cd ~/bin
rm master
wget https://github.com/z0on/annotatingTranscriptomes/archive/master.zip
unzip master
mv annotatingTranscriptomes-master/* .
rm -r annotatingTranscriptomes-master

# creating annotation dir
cdw
cd db

# getting transcritpome to play with
wget https://dl.dropboxusercontent.com/u/37523721/monti_annotations_may25_2014.zip
unzip monti_annotations_may25_2014.zip
rm -r __*

# copying the raw fasta file to new dir:
mkdir re
cp monti_coral_iso.fasta re
cd re

# statistics:
module load bioperl
seq_stats.pl monti_coral_iso.fasta

# making a play-with copy
head -2000 monti_coral_iso.fasta >transcriptome.fasta

# getting uniprot_swissprot KB database
wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz


# unzipping
gunzip uniprot_sprot.fasta.gz &

# indexing the fasta database
module load blast
makeblastdb -in uniprot_sprot.fasta -dbtype prot

# splitting the transcriptome into 40 chunks
splitFasta.pl transcriptome.fasta 40

# blasting all 40 chunks to uniprot in parallel
module load blast
ls subset* | perl -pe 's/^(\S+)$/blastx -query $1 -db uniprot_sprot\.fasta -evalue 0\.0001 -num_threads 3 -num_descriptions 5 -num_alignments 5 -out $1.br/'>bl
# execute all commands in file bl in parallel (use LAUNCHER module)

# combining all blast results
cat subset*br > myblast.br
rm subset*

# for trinity-assembled transcriptomes: annotating with "isogroup" (=component)
grep ">" transcriptome.fasta | perl -pe 's/>((TRINITY.+_g\d+)\S+)/$1\t$2/' >transcriptome_seq2iso.tab 
cat transcriptome.fasta | perl -pe 's/>((TRINITY.+_g\d+)\S+)/>$1 gene=$2/' >transcriptome_iso.fasta

# extracting coding sequences and corresponding protein translations:
module load bioperl
CDS_extractor_v2.pl transcriptome_iso.fasta myblast.br allhits bridgegaps

# upload the extracted protein sequences here
http://eggnogdb.embl.de/#/app/emapper 

# download the results table, 
# follow steps described here: https://github.com/z0on/emapper_to_GOMWU_KOGMWU 
# to extract gene names, GO and KOG annotations

#------------------------------
# KEGG annotations:

# selecting the longest contig per isogroup:
fasta2SBH.pl transcriptome_iso.fasta >transcriptome_4kegg.fasta

# scp transcriptome_4kegg.fasta to your laptop
# use web browser to submit transcriptome_4kegg.fasta file to KEGG's KAAS server ( http://www.genome.jp/kegg/kaas/ )
# select SBH algorithm, upload nucleotide query
# Once it is done, download the 'text' output from KAAS, name it query.ko (default)

# selecting only the lines with non-missing annotation:
cat query.ko | awk '{if ($2!="") print }' > transcriptome_iso2kegg.tab

# the KEGG mapping result can be explored for completeness of transcriptome in terms of genes found,
# use 'html' output link from KAAS result page, see how many proteins you have for conserved complexes and pathways,
# such as ribosome, spliceosome, proteasome etc

